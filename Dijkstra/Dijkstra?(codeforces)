//https://codeforces.com/problemset/problem/20/C

//Author: Fuadul Hasan(fuadul202@gmail.com)
#include<bits/stdc++.h>
using namespace std;

#define int long long
#define pb  push_back
#define vi  vector<int>
#define all(n) n.begin(),n.end()
#define vout(v) for (auto z: v) cout << z << " "; cout << endl;
const int M = 1e9 + 7;

const int N   = 4e5 + 5;

std::vector<pair<int,int>> adj[N];
int par[N];
int dist[N];

void dijkastra(int s,int n){
	for(int i=0;i<=n;i++){
		dist[i] = 1e18;
	}
	par[s] = 0;
	priority_queue<pair<int,int>,std::vector<pair<int,int>>,greater<pair<int,int>>>pq;
	pq.push({0,s});
	dist[s] = 0;
	while(!pq.empty()){
		int u = pq.top().second;
		int dis = pq.top().first;
		pq.pop();
		if(dist[u] < dis) continue;
		for(auto v: adj[u]){
			int node = v.first;
			int weight = v.second;
			if(dist[node] > dist[u]+weight){
				dist[node] = dist[u]+weight;
				par[node] = u;
				pq.push({dist[node],node});
			}
		}
	}

}

signed main(){
	
	int n,m;
	scanf("%lld%lld", &n,&m);
	int x,y,w;
	for(int i=0;i<m;i++){
		scanf("%lld%lld%lld", &x,&y,&w);
		adj[x].pb({y,w});
		adj[y].pb({x,w});
	}	

	dijkastra(1,n);

	if(dist[n] == 1e18){
		cout<<-1<<endl;
		return 0;
	}

	std::vector<int> ans = {n};
	int u = n;
	while(par[u] != 0){
		ans.push_back(par[u]);
		u = par[u];
	}

	reverse(all(ans));

	vout(ans);

	return 0;
}
