//Author: Fuadul Hasan(fuadul202@gmail.com)
//BSMRSTU,Gopalganj
#include<bits/stdc++.h>
using namespace std;int tc = 1;
#define happy ios::sync_with_stdio(false);
#define coding  cin.tie(0);
#define mp make_pair
#define ll long long
#define Pi atan(1)*4
#define pb  push_back
#define vpr vector<pr> 
#define pr pair<int, int> 
#define vi std::vector<int>
#define vll std::vector<ll>
#define YES printf("YES\n");
#define NO printf("NO\n");
#define Yes printf("Yes\n");
#define No printf("No\n");
#define all(n) n.begin(),n.end()
#define point(x) setprecision(x)
#define Test printf("Case %d: ",tc++);
#define Unique(c) (c).resize(unique(all(c))-(c).begin())

const int M = 1e9 + 7;
const ll  Inf = (ll)2e18 + 5;
const int N   = 2e5 + 5;


// Longest common subsequence using recursion
/*int LCS(string a,string b,int m,int n){
	if(m==0||n==0){
		return 0;
	}
	if(a[m-1]==b[n-1]){
		return 1+ LCS(a,b,m-1,n-1);
	}else{
		return max(LCS(a,b,m,n-1),LCS(a,b,m-1,n));
	}
}
*/
//longest common subsequence using dynamic programming

/*int LCS(string a,string b,int m,int n)
{
	int l[m+1][n+1];
	for(int i=0;i<=m;i++){
		for(int j=0;j<=n;j++){
			if(i==0 or j == 0) l[i][j] = 0;
			else if(a[i-1]==b[j-1]) l[i][j] = l[i-1][j-1] + 1;
			else l[i][j] = max(l[i-1][j],l[i][j-1]);
		}
	}
	return l[m][n];
}*/

//print longest common subsequence  using dynamic progarmming
string LCS(string a,string b,int m,int n)
{
	int l[m+1][n+1];
	for(int i=0;i<=m;i++){
		for(int j=0;j<=n;j++){
			if(i==0 or j == 0) l[i][j] = 0;
			else if(a[i-1]==b[j-1]) l[i][j] = l[i-1][j-1] + 1;
			else l[i][j] = max(l[i-1][j],l[i][j-1]);
		}
	}

	for(int i=0;i<=m;i++){
		for(int j=0;j<=n;j++){
			cout<<l[i][j]<<" ";
		}cout<<endl;
	}
	//return l[m][n];
	int index = l[m][n];

	char lcs[index+1];
	lcs[index] = '\0';

	int i = m;
	int j = n;
	while(i>0&&j>0){
		if(a[i-1]==b[j-1]){
			lcs[index-1] = a[i-1];
			i--;j--;index--;
		}else if(l[i-1][j]>l[i][j-1]){
			i--;
		}else{
			j--;
		}
	}

	//cout<<lcs<<endl;
	return lcs;
}

int solve() 
{
	//happy coding

	string a,b;
	cin>>a>>b;

	int x = a.size();
	int y = b.size();

	//cout<<"Length of LCS "<<LCS(a,b,x,y)<<endl;
	cout<<LCS(a,b,x,y)<<endl;
	
	return 0;
}
int main(){
	int test = 1;
	//scanf("%d", &test);
	while (test--)solve();return 0;
}
